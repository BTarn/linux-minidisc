name: Build from source

on:
  push:
    branches:
      - master
    tags:
      - '**'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.build_host }}
    strategy:
      fail-fast: false
      matrix:
        build_host:
          - ubuntu-latest
        build_type:
          - linux
          - mingw32
          - mingw64
        include:
           - build_host: macos-latest
             build_type: macos
    env:
      BUILD_TYPE: ${{ matrix.build_type }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true
      - name: Install dependencies
        run: sh build/install_dependencies.sh
      - name: Build (native)
        if: "!contains(matrix.build_type, 'mingw')"
        run: |
          qmake
          make
          sh build/package_build.sh
      - name: Build (cross-compile, 64-bit)
        if: matrix.build_type == 'mingw64'
        run: |
          docker run -e BUILD_TYPE -v $(pwd):/build/ --rm linux-minidisc-mingw-docker sh build/cross_wrapper_mingw.sh x86_64-w64-mingw32-qmake-qt5
          docker run -e BUILD_TYPE -v $(pwd):/build/ --rm linux-minidisc-mingw-docker sh build/cross_wrapper_mingw.sh make
          docker run -e BUILD_TYPE -v $(pwd):/build/ --rm linux-minidisc-mingw-docker sh build/cross_wrapper_mingw.sh sh build/package_build.sh
      - name: Build (cross-compile, 32-bit)
        if: matrix.build_type == 'mingw32'
        run: |
          docker run -e BUILD_TYPE -v $(pwd):/build/ --rm linux-minidisc-mingw-docker sh build/cross_wrapper_mingw.sh i686-w64-mingw32-qmake-qt5
          docker run -e BUILD_TYPE -v $(pwd):/build/ --rm linux-minidisc-mingw-docker sh build/cross_wrapper_mingw.sh make
          docker run -e BUILD_TYPE -v $(pwd):/build/ --rm linux-minidisc-mingw-docker sh build/cross_wrapper_mingw.sh sh build/package_build.sh
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-result
          path: dist/*
          if-no-files-found: ignore
      - name: Upload release
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          gh release create "${GITHUB_REF#refs/tags/}" || true
          gh release upload "${GITHUB_REF#refs/tags/}" dist/* || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
